#문자열 대체
- replace()메소드는 기존 문자열은 그대로 두고, 대체한 새로운 문자열을 리턴 (치환)
  ```java
  String oldStr = "자바 프로그래밍"
  String newStr = " oldStr.replace("자바", "JAVA")
  ```

<br>
<br>
<br>

#문자열 잘라내기
- 특정 위치의 문자열을 잘라낸다.
```java
public static void main(String[] args) {
		
		String str = "안녕하세요.";
		System.out.println(str.charAt(2));
}
```

```java
public static void main(String[] args) {
		
		String str = "안녕하세요.";
		System.out.println(str.charAt(2)); //두번째 글자 출력
		System.out.println(str.length()); // 글자의 개수 
		str = str.replace("요", "용"); //요 글자를 용으로 변경
		System.out.println(str); 
		System.out.println(str.substring(2, 4));//2, 3번 글자 출력
		
	}
```

```java
if (0 > str.indexOf("*")) { //*이라는 글자가 0보다 작다 = 해당 글자가 없다.
		}  					//*이라는 글자가 -1보다 크다 = 해당 글자가 있다.
		}  					//*이라는 글자가 -1보다 크다 = 해당 글자가 있다.
```

<br>
<br>

#문자열 분리
- 구분자가 있는 여러 개의 문자열을 분리할 때 split() 메소드 사용.
  
```java
String board = "번호, 제목, 내용, 글쓴이";
String[] arr = board.split(",");
```
  - ,를 기준으로 문자열을 분리해준다.
  - arr[0] : 번호 /  arr[1] : 제목 /  arr[2] : 내용 / arr[3] : 글쓴이

<br>
<br>

```java
String data = "번호,메뉴,커피가격,수량,총액,주문일시,결제방법\n";
		 		data += "1,아메리카노,5000,20,100000,20250319145710,C1\n";
		 		data += "2,카페라떼,6000,15,90000,20250319145930,C1\n";
		
		System.out.println(data);
```
번호,메뉴,커피가격,수량,총액,주문일시,결제방법<br>
1,아메리카노,5000,20,100000,20250319145710,C1<br>
2,카페라떼,6000,15,90000,20250319145930,C1<br>

<br>
<br>

```java
String data = "번호,메뉴,커피가격,수량,총액,주문일시,결제방법\n";
		 		data += "1,아메리카노,5000,20,100000,20250319145710,C1\n";
		 		data += "2,카페라떼,6000,15,90000,20250319145930,C1\n";
		
		System.out.println(data);
		data = data.replace("\n", ","); //스플릿을 ,기준으로 해두었어서 \n을 나누지 못함. \n을 ,로 변환
		
		String[] arr = data.split(",");
		
		System.out.println();
```
<br>
<br>

#배열(array)
- 대괄호 사용

```java
public static void main(String[] args) {

		String data = "번호,메뉴,커피가격,수량,총액,주문일시,결제방법\n"; // 6
		data += "1,아메리카노,5000,20,100000,20250319145710,C1\n";// 13
		data += "2,카페라떼,6000,15,90000,20250319145930,C1\n";// 20

		System.out.println(data);
		data = data.replace("\n", ","); // 스플릿을 ,기준으로 해두었어서 \n을 나누지 못함. \n을 ,로 변환

		String[] arr = data.split(",");

		int cnt = 1; // 개행용 변수
		for (int i = 0 ; i < arr.length ; i++) { // arr.length = 갯수는 모르지만 끝까지
			System.out.print(arr[i] + " | "); //
			if (0 == cnt % 7) { // cnt 가 7의 배수라면
				System.out.println();//다음 줄
			}
				cnt++;
		}

		System.out.println();
```
번호,메뉴,커피가격,수량,총액,주문일시,결제방법<br>
1,아메리카노,5000,20,100000,20250319145710,C1<br>
2,카페라떼,6000,15,90000,20250319145930,C1<br>

번호 | 메뉴 | 커피가격 | 수량 | 총액 | 주문일시 | 결제방법 | <br>
1 | 아메리카노 | 5000 | 20 | 100000 | 20250319145710 | C1 | <br>
2 | 카페라떼 | 6000 | 15 | 90000 | 20250319145930 | C1 | <br>

<br>
<br>
- 타입[] 변수 = {값0, 값1, 값2, 값3, ...};<br>
  
```java
public static void main(String[] args) {

		int[] arr = {1,2,3}; //arr이라는 변수에 데이터 3개. 데이터를 알 때
		int[] arr2 = new int[]{1,2,3};//데이터를 알 때
		int[] arr3 = new int[3];//데이터는 모르지만 갯수만 알 때.
```

<br>

#배열 복사하기
- 배열은 한 번 생성하면 길이 변경 불가. 저장해야 할 데이터가 늘어나면 배열을 새로 만들고 이전 배열에서 항목들을 복사해야 함.
- e.g) 초기에 array를 3개 만들어 놓고 나중에 데이터가 그 이상으로 추가해야할 때
- System의 arraycopy()메소드를 이용해 배열 복사 가능.
- System.arraycopy(Object src, int srcPos, Object dest, int destPos, int length);
- Object src : 원본배열
- int srcPos : 원본배열 복사 시작 인덱스
- Object dest : 새 배열
- int destPos : 새 배열 붙여넣기 시작 인덱스
- int length : 복사 항목 수

```java
int[] arr3 = new int[3];//데이터는 모르지만 갯수만 알 때.
		arr3[0] = 1; //0번째에 1을 넣어라
		arr3[1] = 2; //1번째에 2을 넣어라
		arr3[2] = 3; //2번째에 3을 넣어라
```

<br>
<br>

- new연산자로 배열을 처음 생성하면 배열항목은 기본값으로 초기화됨

```java
String[] arr = new String[9999999];
		String[] arr2 = arr; // arr2 도 arr의 인스턴스를 가리킴. 같은 id를 갖게 되므로 동일한 인스턴스.
		System.out.println();
```

```java
public class lotto {

	public static void main(String[] args) {
		int[] lotto = new int[6]; // 로또 배열의 갯수 6개
		int[] mynum = new int[6]; // 내가 지정학 번호의 갯수 6개
		Random rand = new Random();
		Scanner scan = new Scanner(System.in);

		for (int i = 0; i < lotto.length; i++) { //로또 랜덤으로 번호 만들기
			// i변수는 0부터 시작(초기값), 범위는 lotto 갯수 미만(조건식), 숫자 하나씩 증가
			lotto[i] = rand.nextInt(45) + 1; // 로또 번호는 46번까지이므로 +1 해야함
		}
		for (int i = 0; i < mynum.length; i++) { // 내가 입력한 번호
			// 내가 입력할 번호의 변수 i값은 0부터 시작하여 mynum으로 설정해둔 갯수까지 한개씩 늘려감
			System.out.print("번호?"); // 번호 입력키 출력
			mynum[i] = scan.nextInt(); // 사용자에게 숫자 입력받아서 저장
		}

		int atari = 0; // 당첨 개수(변수)는 0개부터 시작
		for (int i = 0; i < mynum.length; i++) {// 내가 입력한 번호와
			for (int j = 0; j < lotto.length; j++) { // 랜덤으로 뽑은 로또번호가(내 번호와 로또번호가 같은 i변수 사용 불가)
				if (mynum[i] == lotto[j]) { // 만약 같다면
					atari++; // atari의 개수 증가
					break; // 탈출
				}
			}
		}
		System.out.printf("atari count = %d", atari);
```

번호?1
번호?2
번호?3
번호?4
번호?5
번호?6
atari count = 1

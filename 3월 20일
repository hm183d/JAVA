#복습

- 배열에 저장될 값의 목록이 있다면 간단히 배열가능
타입[]변수 = {값0, 값1, 값2, ...};
- 배열의 길이를 알고 있다면 배열의 길이를 지정하여 배열을 생성할 수 있음
타입[] 변수 = new 타입[길이];
- 배열 변수를 선언한 시점과 값 목록이 대입되는 시점이 다르다면 new타입을 사용하여 배열을 생성할 수 있음
- 타입[]변수 = new 타입[길이];
- new연산자로 배열을 처음 생성하며 배열 항목은 기본값으로 초기화
- 배열의 길이는 배열.length로 알 수 있음
- 배열의 항목에 접근할 때는 배열[인덱스]로 접근
- 배열의 인덱스는 0부터 시작(기본타입)
- 배열의 인덱스는 null부터 시작(참조타입)
- 배열의 인덱스가 배열의 길이보다 크거나 같으면 ArrayIndexOutOfBoundsException이 발생
- 필드 = 속성 = 정보 = 데이터

```java
public class Test2 {

	public static void main(String[] args) {
		
		int[] arr = new int[3]; // 값은 지정하지 않았지만 개수는 3개이다. =  int[] arr = {1,2,3}; 과 같음
		System.out.println(arr.length);

	}

}
```

```java
public static void main(String[] args) {
		//정보
		int[] lotto = new int[6]; // 로또 배열의 갯수 6개(사이즈만 알고 값은 모름. 처리 부분에서 값을 받아서 저장할 것)
		int[] mynum = new int[6]; // 내가 지정한 번호의 갯수 6개(사이즈만 알고 값은 모름. 처리 부분에서 값을 받아서 저장할 것)
		Random rand = new Random(); // 데이터를 뽑는 방식이 랜덤
		Scanner scan = new Scanner(System.in); // 사용자의 입력을 받아야 해서 기능 추가

		
		//처리
		for (int i = 0; i < lotto.length; i++) { //로또 랜덤으로 번호 만들기
			// i변수는 0부터 시작(초기값), 범위는 lotto 갯수 미만(조건식), 숫자 하나씩 증가
			lotto[i] = rand.nextInt(45) + 1; // 로또 번호는 45번까지이므로 +1 해야함. 45는 0부터 44까지 여기에 1을 더하면 1부터 45가됨
		} // lotto라는 저장공간에 6개 저장
		for (int i = 0; i < mynum.length; i++) { // 내가 입력한 번호
			// 내가 입력할 번호의 변수 i값은 0부터 시작하여 mynum으로 설정해둔 갯수까지 한개씩 늘려감
			System.out.print("번호?"); // 번호 입력키 출력
			mynum[i] = scan.nextInt(); // 사용자에게 숫자 입력받아서 저장
		}

		int atari = 0; // 당첨 개수(변수)는 0개부터 시작
		for (int i = 0; i < mynum.length; i++) {// 내가 입력한 번호와
			for (int j = 0; j < lotto.length; j++) { // 랜덤으로 뽑은 로또번호가(내 번호와 로또번호가 같은 i변수 사용 불가)
				if (mynum[i] == lotto[j]) { // 만약 같다면
					atari++; // atari의 개수 증가
					break; // 탈출 > 다음 번호 비교를 반복함.
				}
			}
```

로또 중복번호 방지
- 6칸에 번호를 집어넣음. 처음에는 0번으로 저장되어 있음.
- 중복 숫자는 안되기 때문에 중복이 되면 다시 뽑아야함.
- 인덱스가 5번까지 저장되면 탈출.


- 매개변수 : Argument 와 parameter
- Argument : 메소드를 호출할 때 전달하는 값(인자)
- Parameter : 메소드를 선언할 때 선언하는 변수



#열혈자바 - 상수
```java
class Constants {
    public static void main(String[] args) {
        final int MAX_SIZE = 100;
        final char CONST_CHAR = '상';
        final int CONST_ASSIGNED;

        CONST_ASSIGNED = 12;

        System.out.println("상수1 : " + MAX_SIZE);
        System.out.println("상수2 : " + CONST_CHAR);
        System.out.println("상수3 : " + CONST_ASSIGNED);
    }
}
```
 - CONST_ASSIGNED = 12; 가 선언된 이후에 한 번 더 사용하며 값을 변경하려고 하면 오류 발생.

